{"ast":null,"code":"var _jsxFileName = \"/Users/johnsonanikethnagamallah/Desktop/MyProject/ecommerce/src/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./reducer\";\nimport axios from './axios';\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const history = useHistory();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    // generate the special stripe secret which allows us to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        // Stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n  console.log('THE SECRET IS >>>', clientSecret);\n  console.log('ðŸ‘±', user);\n\n  const handleSubmit = async event => {\n    // do all the fancy stripe stuff...\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      // paymentIntent = payment confirmation\n      db.collection('users').doc(user === null || user === void 0 ? void 0 : user.uid).collection('orders').doc(paymentIntent.id).set({\n        basket: basket,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      dispatch({\n        type: 'EMPTY_BASKET'\n      });\n      history.replace('/orders');\n    });\n  };\n\n  const handleChange = event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout (\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"123 React Lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Los Angeles, CA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__items\",\n          children: basket.map(item => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            price: item.price,\n            rating: item.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"wwvkYTX8kXeAM+bDqmI5HXwQxYE=\", false, function () {\n  return [useStateValue, useHistory, useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/johnsonanikethnagamallah/Desktop/MyProject/ecommerce/src/Payment.js"],"names":["React","useState","useEffect","useStateValue","CheckoutProduct","Link","useHistory","CardElement","useStripe","useElements","CurrencyFormat","getBasketTotal","axios","db","Payment","basket","user","dispatch","history","stripe","elements","succeeded","setSucceeded","processing","setProcessing","error","setError","disabled","setDisabled","clientSecret","setClientSecret","getClientSecret","response","method","url","data","console","log","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","replace","handleChange","empty","message","length","email","map","item","title","image","price","rating"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport { useStateValue } from \"./StateProvider\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { getBasketTotal } from \"./reducer\";\nimport axios from './axios';\nimport { db } from \"./firebase\";\n\nfunction Payment() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n        // generate the special stripe secret which allows us to charge a customer\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                // Stripe expects the total in a currencies subunits\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n\n        getClientSecret();\n    }, [basket])\n\n    console.log('THE SECRET IS >>>', clientSecret)\n    console.log('ðŸ‘±', user)\n\n    const handleSubmit = async (event) => {\n        // do all the fancy stripe stuff...\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            // paymentIntent = payment confirmation\n\n            db\n              .collection('users')\n              .doc(user?.uid)\n              .collection('orders')\n              .doc(paymentIntent.id)\n              .set({\n                  basket: basket,\n                  amount: paymentIntent.amount,\n                  created: paymentIntent.created\n              })\n\n            setSucceeded(true);\n            setError(null)\n            setProcessing(false)\n\n            dispatch({\n                type: 'EMPTY_BASKET'\n            })\n\n            history.replace('/orders')\n        })\n\n    }\n\n    const handleChange = event => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n        <div className='payment'>\n            <div className='payment__container'>\n                <h1>\n                    Checkout (\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\n                        )\n                </h1>\n\n\n                {/* Payment section - delivery address */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div className='payment__address'>\n                        <p>{user?.email}</p>\n                        <p>123 React Lane</p>\n                        <p>Los Angeles, CA</p>\n                    </div>\n                </div>\n\n                {/* Payment section - Review Items */}\n                <div className='payment__section'>\n                    <div className='payment__title'>\n                        <h3>Review items and delivery</h3>\n                    </div>\n                    <div className='payment__items'>\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n                </div>\n            \n\n                {/* Payment section - Payment method */}\n                <div className='payment__section'>\n                    <div className=\"payment__title\">\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className=\"payment__details\">\n                            {/* Stripe magic will go */}\n\n                            {/* <form onSubmit={handleSubmit}>\n                                <CardElement onChange={handleChange}/>\n\n                                <div className='payment__priceContainer'>\n                                    <CurrencyFormat\n                                        renderText={(value) => (\n                                            <h3>Order Total: {value}</h3>\n                                        )}\n                                        decimalScale={2 s}\n                                        value={getBasketTotal(basket)}\n                                        displayType={\"text\"}\n                                        thousandSeparator={true}\n                                        prefix={\"$\"}\n                                    />\n                                    <button disabled={processing || disabled || succeeded}>\n                                        <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                    </button>\n                                </div>\n\n                                //   {/* Errors */}\n                             {/* {error && <div>{error}</div>}\n                            </form> */}\n                    </div>      \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment"]},"metadata":{},"sourceType":"module"}